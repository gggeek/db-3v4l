version: '3'

networks:
    default:
        ipam:
            config:
                - subnet: "${COMPOSE_SUBNET}.0/24"

services:

    adminer:
        build:
            context: images/adminer
            args:
                debian_mirror: "${COMPOSE_DEBIAN_MIRROR}"
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
        hostname: adminer
        container_name: "${COMPOSE_PROJECT_NAME}_adminer"
        # No ports exposed by default: we use the 'web' container as reverse proxy
        #ports:
        #    - "${COMPOSE_WEB_LISTEN_ADDR}:${COMPOSE_WEB_LISTEN_PORT_HTTP}:80"
        #    - "${COMPOSE_WEB_LISTEN_ADDR}:${COMPOSE_WEB_LISTEN_PORT_HTTPS}:443"
        volumes:
            - ../app:/var/www/db3v4l
            - ./logs/admin/nginx:/var/log/nginx
            - ./logs/admin/php:/var/log/php
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - ORACLE_PWD
            - POSTGRES_PASSWORD
            - SA_PASSWORD

    lazydocker:
        build:
            context: images/lazydocker
            args:
                debian_mirror: "${COMPOSE_DEBIAN_MIRROR}"
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
        hostname: lazydocker
        container_name: "${COMPOSE_PROJECT_NAME}_lazydocker"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            # @todo could we get away with mounting something that does not include data and logs?
            #       Maybe it would be enough to copy the composer files into the container ?
            - ./:/var/db3v4l

    redis:
        build:
            context: images/redis
            args:
                debian_mirror: "${COMPOSE_DEBIAN_MIRROR}"
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
        hostname: redis
        container_name: "${COMPOSE_PROJECT_NAME}_redis"
        volumes:
            - ./data/redis:/var/redis
            - ./logs/redis:/var/log/redis

    web:
        build:
            context: images/web
            args:
                debian_mirror: "${COMPOSE_DEBIAN_MIRROR}"
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
        hostname: web
        container_name: "${COMPOSE_PROJECT_NAME}_web"
        ports:
            - "${COMPOSE_WEB_LISTEN_ADDR}:${COMPOSE_WEB_LISTEN_PORT_HTTP}:80"
            - "${COMPOSE_WEB_LISTEN_ADDR}:${COMPOSE_WEB_LISTEN_PORT_HTTPS}:443"
        volumes:
            - ../app:/var/www/db3v4l
            - ../doc:/var/www/doc
            - ./logs/web/nginx:/var/log/nginx
            - ./logs/web/php:/var/log/php
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - APP_ENV
            - APP_DEBUG

    worker:
        build:
            context: images/worker
            args:
                debian_mirror: "${COMPOSE_DEBIAN_MIRROR}"
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                container_user: "${CONTAINER_USER}"
        hostname: worker
        container_name: "${COMPOSE_PROJECT_NAME}_worker"
        volumes:
            - "../app:/home/${CONTAINER_USER}/app"
            - "../doc:/home/${CONTAINER_USER}/doc"
            - "../shared:/home/${CONTAINER_USER}/shared"
            - "./data/composer_cache/:/home/${CONTAINER_USER}/.composer"
            - "./data/sqlite/:/home/${CONTAINER_USER}/data/sqlite"
        environment:
            - CONTAINER_USER
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - APP_ENV
            - APP_DEBUG
            - COMPOSE_SETUP_APP_ON_BOOT
            - MYSQL_ROOT_PASSWORD
            - ORACLE_PWD
            - POSTGRES_PASSWORD
            - SA_PASSWORD

### Databases

    mariadb_5_5:
        build:
            context: images/mariadb/5.5
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MARIADB_5_5_VERSION}"
        hostname: mariadb_5_5
        container_name: "${COMPOSE_PROJECT_NAME}_mariadb_5_5"
        #ports:
        #    - "3310:3306"
        volumes:
            - ./config/mariadb/5.5/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mariadb/5.5:/var/lib/mysql
            - ./logs/mariadb/5.5:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mariadb_10_0:
        build:
            context: images/mariadb/10.0
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MARIADB_10_0_VERSION}"
        hostname: mariadb_10_0
        container_name: "${COMPOSE_PROJECT_NAME}_mariadb_10_0"
        #ports:
        #    - "3311:3306"
        volumes:
            - ./config/mariadb/10.0/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mariadb/10.0:/var/lib/mysql
            - ./logs/mariadb/10.0:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mariadb_10_1:
        build:
            context: images/mariadb/10.1
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MARIADB_10_1_VERSION}"
        hostname: mariadb_10_1
        container_name: "${COMPOSE_PROJECT_NAME}_mariadb_10_1"
        #ports:
        #    - "3312:3306"
        volumes:
            - ./config/mariadb/10.1/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mariadb/10.1:/var/lib/mysql
            - ./logs/mariadb/10.1:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mariadb_10_2:
        build:
            context: images/mariadb/10.2
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MARIADB_10_2_VERSION}"
        hostname: mariadb_10_2
        container_name: "${COMPOSE_PROJECT_NAME}_mariadb_10_2"
        #ports:
        #    - "3313:3306"
        volumes:
            - ./config/mariadb/10.2/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mariadb/10.2:/var/lib/mysql
            - ./logs/mariadb/10.2:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mariadb_10_3:
        build:
            context: images/mariadb/10.3
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MARIADB_10_3_VERSION}"
        hostname: mariadb_10_3
        container_name: "${COMPOSE_PROJECT_NAME}_mariadb_10_3"
        #ports:
        #    - "3314:3306"
        volumes:
            - ./config/mariadb/10.3/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mariadb/10.3:/var/lib/mysql
            - ./logs/mariadb/10.3:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mariadb_10_4:
        build:
            context: images/mariadb/10.4
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MARIADB_10_4_VERSION}"
        hostname: mariadb_10_4
        container_name: "${COMPOSE_PROJECT_NAME}_mariadb_10_4"
        #ports:
        #    - "3315:3306"
        volumes:
            - ./config/mariadb/10.4/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mariadb/10.4:/var/lib/mysql
            - ./logs/mariadb/10.4:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mariadb_10_5:
        build:
            context: images/mariadb/10.5
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MARIADB_10_5_VERSION}"
        hostname: mariadb_10_5
        container_name: "${COMPOSE_PROJECT_NAME}_mariadb_10_5"
        #ports:
        #    - "3315:3306"
        volumes:
            - ./config/mariadb/10.5/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mariadb/10.5:/var/lib/mysql
            - ./logs/mariadb/10.5:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mysql_5_5:
        build:
            context: images/mysql/5.5
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MYSQL_5_5_VERSION}"
        hostname: mysql_5_5
        container_name: "${COMPOSE_PROJECT_NAME}_mysql_5_5"
        #ports:
        #    - "3306:3306"
        volumes:
            - ./config/mysql/5.5/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mysql/5.5:/var/lib/mysql
            - ./logs/mysql/5.5:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mysql_5_6:
        build:
            context: images/mysql/5.6
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MYSQL_5_6_VERSION}"
        hostname: mysql_5_6
        container_name: "${COMPOSE_PROJECT_NAME}_mysql_5_6"
        #ports:
        #    - "3307:3306"
        volumes:
            - ./config/mysql/5.6/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mysql/5.6:/var/lib/mysql
            - ./logs/mysql/5.6:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mysql_5_7:
        build:
            context: images/mysql/5.7
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MYSQL_5_7_VERSION}"
        hostname: mysql_5_7
        container_name: "${COMPOSE_PROJECT_NAME}_mysql_5_7"
        #ports:
        #    - "3308:3306"
        volumes:
            - ./config/mysql/5.7/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mysql/5.7:/var/lib/mysql
            - ./logs/mysql/5.7:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    mysql_8_0:
        build:
            context: images/mysql/8.0
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MYSQL_8_0_VERSION}"
        hostname: mysql_8_0
        container_name: "${COMPOSE_PROJECT_NAME}_mysql_8_0"
        #ports:
        #    - "3309:3306"
        volumes:
            - ./config/mysql/8.0/${COMPOSE_DB_SIZE}.cnf:/etc/mysql/conf.d/mysql.cnf
            - ./data/mysql/8.0:/var/lib/mysql
            - ./logs/mysql/8.0:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

#    There's not yet a click-free oracle-11g-xe installation available for download yet...
#    oracle_11_2:
#        build:
#            context: images/oracle/11.2
#            args:
#                timezone: "${COMPOSE_TZ}"
#                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
#        hostname: oracle_11_2
#        container_name: "${COMPOSE_PROJECT_NAME}_oracle_11_2"
#        #ports:
#        #    - "1522:1521"
#        volumes:
#            #- ./config/oracle/11.2/${COMPOSE_DB_SIZE}.cnf:/opt/oracle/...
#            - ./data/oracle/11.2:/opt/oracle/oradata
#            #- ./logs/oracle/11.2:...
#        environment:
#            - CONTAINER_USER_UID
#            - CONTAINER_USER_GID

    oracle_18_4:
        build:
            context: images/oracle/18.4
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
        hostname: oracle_18_4
        container_name: "${COMPOSE_PROJECT_NAME}_oracle_18_4"
        #ports:
        #    - "1522:1521"
        volumes:
            # @todo add in boostrap.sh support for appending this to the existing init.ora...
            #- ./config/oracle/18.4/${COMPOSE_DB_SIZE}.init.ora:/etc/sysconfig/oracle-xe-18c.init.ora.extra
            - ./data/oracle/18.4:/opt/oracle/oradata
            # @todo which of the many oracle log folder to map to the host? see `find /opt/oracle/ -name '*.log'`...
            #       Idea: we could mount many container folders to subdirs of ./logs/oracle/18.4
            #- ./logs/oracle/18.4/alert_XE.log:/opt/oracle/diag/rdbms/xe/XE/trace/alert_XE.log
            #- ./logs/oracle/18.4/rdbms:/opt/oracle/product/18c/dbhomeXE/rdbms/log/
            #- ./logs/oracle/18.4/client:/opt/oracle/product/18c/dbhomeXE/log/oracle_18_4/client/
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - ORACLE_PWD

    percona_5_6:
        build:
            context: images/percona/5.6
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${PERCONA_5_6_VERSION}"
        hostname: percona_5_6
        container_name: "${COMPOSE_PROJECT_NAME}_percona_5_6"
        #ports:
        #    - "3310:3306"
        volumes:
            - ./config/percona/5.6/${COMPOSE_DB_SIZE}.cnf:/etc/my.cnf.d/percona.cnf
            - ./data/percona/5.6:/var/lib/mysql
            - ./logs/percona/5.6:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    percona_5_7:
        build:
            context: images/percona/5.7
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${PERCONA_5_7_VERSION}"
        hostname: percona_5_7
        container_name: "${COMPOSE_PROJECT_NAME}_percona_5_7"
        #ports:
        #    - "3311:3306"
        volumes:
            - ./config/percona/5.7/${COMPOSE_DB_SIZE}.cnf:/etc/my.cnf.d/percona.cnf
            - ./data/percona/5.7:/var/lib/mysql
            - ./logs/percona/5.7:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    percona_8_0:
        build:
            context: images/percona/8.0
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${PERCONA_8_0_VERSION}"
        hostname: percona_8_0
        container_name: "${COMPOSE_PROJECT_NAME}_percona_8_0"
        #ports:
        #    - "3312:3306"
        volumes:
            - ./config/percona/8.0/${COMPOSE_DB_SIZE}.cnf:/etc/my.cnf.d/percona.cnf
            - ./data/percona/8.0:/var/lib/mysql
            - ./logs/percona/8.0:/var/log/mysql
        tmpfs:
            # used for mysql temp tables
            - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - MYSQL_ROOT_PASSWORD
            - MYSQL_USER
            - MYSQL_PASSWORD
            - MYSQL_DATABASE

    postgresql_9_4:
        build:
            context: images/postgresql/9.4
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${POSTGRESQL_9_4_VERSION}"
        hostname: postgresql_9_4
        container_name: "${COMPOSE_PROJECT_NAME}_postgresql_9_4"
        #ports:
        #    - "5432:5432"
        volumes:
            - ./config/postgresql/9.4/${COMPOSE_DB_SIZE}.conf:/etc/postgresql/conf.d/postgresql.conf
            - ./data/postgresql/9.4:/var/lib/postgresql
            - ./logs/postgresql/9.4:/var/log/postgresql
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - POSTGRES_PASSWORD

    postgresql_9_5:
        build:
            context: images/postgresql/9.5
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${POSTGRESQL_9_5_VERSION}"
        hostname: postgresql_9_5
        container_name: "${COMPOSE_PROJECT_NAME}_postgresql_9_5"
        #ports:
        #    - "5433:5432"
        volumes:
            - ./config/postgresql/9.5/${COMPOSE_DB_SIZE}.conf:/etc/postgresql/conf.d/postgresql.conf
            - ./data/postgresql/9.5:/var/lib/postgresql
            - ./logs/postgresql/9.5:/var/log/postgresql
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - POSTGRES_PASSWORD

    postgresql_9_6:
        build:
            context: images/postgresql/9.6
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${POSTGRESQL_9_6_VERSION}"
        hostname: postgresql_9_6
        container_name: "${COMPOSE_PROJECT_NAME}_postgresql_9_6"
        #ports:
        #    - "5434:5432"
        volumes:
            - ./config/postgresql/9.6/${COMPOSE_DB_SIZE}.conf:/etc/postgresql/conf.d/postgresql.conf
            - ./data/postgresql/9.6:/var/lib/postgresql
            - ./logs/postgresql/9.6:/var/log/postgresql
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - POSTGRES_PASSWORD

    postgresql_10:
        build:
            context: images/postgresql/10
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${POSTGRESQL_10_VERSION}"
        hostname: postgresql_10
        container_name: "${COMPOSE_PROJECT_NAME}_postgresql_10"
        #ports:
        #    - "5435:5432"
        volumes:
            - ./config/postgresql/10/${COMPOSE_DB_SIZE}.conf:/etc/postgresql/conf.d/postgresql.conf
            - ./data/postgresql/10:/var/lib/postgresql
            - ./logs/postgresql/10:/var/log/postgresql
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - POSTGRES_PASSWORD

    postgresql_11:
        build:
            context: images/postgresql/11
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${POSTGRESQL_11_VERSION}"
        hostname: postgresql_11
        container_name: "${COMPOSE_PROJECT_NAME}_postgresql_11"
        #ports:
        #    - "5436:5432"
        volumes:
            - ./config/postgresql/11/${COMPOSE_DB_SIZE}.conf:/etc/postgresql/conf.d/postgresql.conf
            - ./data/postgresql/11:/var/lib/postgresql
            - ./logs/postgresql/11:/var/log/postgresql
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - POSTGRES_PASSWORD

    postgresql_12:
        build:
            context: images/postgresql/12
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${POSTGRESQL_12_VERSION}"
        hostname: postgresql_12
        container_name: "${COMPOSE_PROJECT_NAME}_postgresql_12"
        #ports:
        #    - "5437:5432"
        volumes:
            - ./config/postgresql/12/${COMPOSE_DB_SIZE}.conf:/etc/postgresql/conf.d/postgresql.conf
            - ./data/postgresql/12:/var/lib/postgresql
            - ./logs/postgresql/12:/var/log/postgresql
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - POSTGRES_PASSWORD

    mssqlserver_2017:
        build:
            context: images/mssqlserver/2017
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MSSQLSERVER_2017_VERSION}"
        hostname:  mssqlserver_2017
        container_name: "${COMPOSE_PROJECT_NAME}_mssqlserver_2017"
        #ports:
        #    - "1433:1433"
        volumes:
            - ./config/mssqlserver/2017/${COMPOSE_DB_SIZE}.conf:/var/opt/mssql/mssql.conf
            - ./data/mssqlserver/2017:/var/opt/mssql/data
            - ./logs/mssqlserver/2017:/var/opt/mssql/log
        #tmpfs:
        #    # used for mysql temp tables
        #    - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - ACCEPT_EULA
            - SA_PASSWORD

    mssqlserver_2019:
        build:
            context: images/mssqlserver/2019
            args:
                timezone: "${COMPOSE_TZ}"
                do_update_os: "${COMPOSE_DO_UPDATE_OS}"
                do_shrink_container: "${COMPOSE_DO_SHRINK_CONTAINERS}"
                base_image_version: "${MSSQLSERVER_2019_VERSION}"
        hostname:  mssqlserver_2019
        container_name: "${COMPOSE_PROJECT_NAME}_mssqlserver_2019"
        #ports:
        #    - "1434:1433"
        volumes:
            - ./config/mssqlserver/2019/${COMPOSE_DB_SIZE}.conf:/var/opt/mssql/mssql.conf
            - ./data/mssqlserver/2019:/var/opt/mssql/data
            - ./logs/mssqlserver/2019:/var/opt/mssql/log
        #tmpfs:
        #    # used for mysql temp tables
        #    - /tmpfs:mode=777,size=1g
        environment:
            - CONTAINER_USER_UID
            - CONTAINER_USER_GID
            - ACCEPT_EULA
            - SA_PASSWORD
