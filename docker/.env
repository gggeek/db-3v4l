# A config file defining default values for env vars which are used in docker-compose.yml,
# which in turn makes some of them available to either the Dockerfiles and the running Containers (or both).
#
# In order to override these values, you can either assign the new value to a proper env var before invoking
# `docker-compose`, or, if using `dbstack.sh`, set them in the .env.local file

# Useful in case you want to run multiple copies of the stack in parallel
COMPOSE_PROJECT_NAME=db3v4l

# The containers get their TZ config from this;
# use 'none' as null value
COMPOSE_TZ=Europe/London???

# Use alternative debian mirrors when building 'surrogate/helper' containers. Useful if there are problems with the default mirrors
# use 'none' as null value
COMPOSE_DEBIAN_MIRROR=none

# Set this to 'false' if you do not want to update all the installed debian packages at the time of build in every 'surrogate/helper' container.
# Trick: you can change this to a different string and then run './stack build' to force a rebuild of the stack that will
# only include debian package updates. You could use f.e. a timestamp as value: 20180428
# NB: updating the base operating system is a good security practice, but it always comes with a risk of breaking things...
COMPOSE_DO_UPDATE_OS=true

# Set this to 'false' for a small speedup at container build time in exchange for bigger container disk images
COMPOSE_DO_SHRINK_CONTAINERS=true

# Used for the subnet local to Composer.
# *NB*: use only the first 3 bytes, as we assume a /24 subnet! No dot at the end.
# Note: private IP subnets go from 172.16.* to 172.31.*
# Note: if you change this value after building the stack once, the modified setting not have effect until:
#       1. you remove the network: `docker network rm okcaws_default`
#       2. you let docker recreate the network: `./stack run` - but here containers will fail. Make sure they are all stopped: `./stack stop`
#       3. you attach all containers to the new network: `docker network connect okcaws_default wrbm-okcaws_builder` etc...
#
COMPOSE_SUBNET=172.20.0

# Used to tweak the IP address (in case of multi-homed systems) and ports where the web interface is exposed
COMPOSE_WEB_LISTEN_ADDR=0.0.0.0
COMPOSE_WEB_LISTEN_PORT_HTTP=80
COMPOSE_WEB_LISTEN_PORT_HTTPS=443

# The config files used to tweak the database correspond to this. By default we have 'small' and 'big'
COMPOSE_DB_SIZE=small

#
COMPOSE_SETUP_APP_ON_BOOT=true


### Settings used by all Containers
# Your user ID and group for file permissions (_as used on host computer_).
#   On Ubuntu/Debian, the 1st user is generally 1000
#   To find out what are your current IDs, run the command `id`
CONTAINER_USER_UID=1000
CONTAINER_USER_GID=1000

# Username for the account used to run cli scripts & the web gui inside containers
# @todo is there any value in making this a variable, apart from having it defined in a single place ?
CONTAINER_USER=db3v4l


### Symfony Settings
APP_ENV=prod
APP_DEBUG=0

### DB Versions
# These are the tags used to identify the base docker images which contain the databases.
# By default the major version is fixed and the minor version is left floating, but you can change it if you need to
# test a specific db minor version
MARIADB_5_5_VERSION=5.5
MARIADB_10_0_VERSION=10.0
MARIADB_10_1_VERSION=10.1
MARIADB_10_2_VERSION=10.2
MARIADB_10_3_VERSION=10.3
MARIADB_10_4_VERSION=10.4
MARIADB_10_5_VERSION=10.5
MYSQL_5_5_VERSION=5.5
MYSQL_5_6_VERSION=5.6
MYSQL_5_7_VERSION=5.7
MYSQL_8_0_VERSION=8.0
PERCONA_5_6_VERSION=5.6
PERCONA_5_7_VERSION=5.7
PERCONA_8_0_VERSION=8.0
POSTGRESQL_9_4_VERSION=9.4
POSTGRESQL_9_5_VERSION=9.5
POSTGRESQL_9_6_VERSION=9.6
POSTGRESQL_10_VERSION=10
POSTGRESQL_11_VERSION=11
POSTGRESQL_12_VERSION=12
MSSQLSERVER_2017_VERSION=2017-latest
MSSQLSERVER_2019_VERSION=2019-latest

### MySQL + MariaDB Settings
# NB: these are used when the db is created the 1st time the platform is executed. Changing them afterwards will have
# no effect (unless you delete the db data files)
MYSQL_ROOT_PASSWORD=3v4l
MYSQL_USER=3v4l
MYSQL_PASSWORD=3v4l
MYSQL_DATABASE=3v4l


# MS SQL Server
ACCEPT_EULA=Y
SA_PASSWORD=3v4l3V4L


# Oracle
ORACLE_PWD=3v4l


# pg root user
#POSTGRES_USER=postgres
POSTGRES_PASSWORD=3v4l
