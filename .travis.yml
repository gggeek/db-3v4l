language: bash

dist: bionic

env:
    # Test (in parallel):
    # - with oldest supported docker & docker-compose (which supports parallel builds)
    # - with most recent docker & docker-compose
    - DOCKER_COMPOSE_VERSION=1.23.0 DOCKER_VERSION=native
    - DOCKER_COMPOSE_VERSION=latest DOCKER_VERSION=latest COMPOSE_LOCAL_ENV_FILE=../tests/environment/.env.01.local

before_install:
    - df -m

install:
    # install docker-compose
    - if [ $DOCKER_COMPOSE_VERSION != native ]; then ./tests/environment/setup/install_docker-compose.sh; fi

    # update to latest docker if required (currently we have 18.06 on the Bionic vm)
    - if [ $DOCKER_VERSION != native ]; then ./tests/environment/setup/install_docker.sh; fi

before_script:
    # @todo this could be moved to native functionality of `dbstack`: patch local env file even if it exists
    - if [ -n "$COMPOSE_LOCAL_ENV_FILE" ]; then echo "CONTAINER_USER_UID=$(id -u)" >> ${COMPOSE_LOCAL_ENV_FILE/../.}; fi
    - if [ -n "$COMPOSE_LOCAL_ENV_FILE" ]; then echo "CONTAINER_USER_GID=$(id -g)" >> ${COMPOSE_LOCAL_ENV_FILE/../.}; fi

script:
    - ./tests/00_build.sh -w 900
    - ./tests/01_dbstack.sh -w 300
    - ./tests/02_dbconsole.sh -w 300
    - ./tests/03_web.sh -w 300
    - ./tests/04_admin.sh -w 300

#after_success:

after_failure:
    #-  if [ -f test01.log ]; then cat test01.log; fi
    #-  if [ -f test02.log ]; then cat test02.log; fi
    #-  if [ -f test03.log ]; then cat test03.log; fi
    #-  if [ -f test04.log ]; then cat test04.log; fi
    - cd docker; for svc in $(../bin/dbstack services); do docker-compose logs $svc; done

after_script:
    - df -m
